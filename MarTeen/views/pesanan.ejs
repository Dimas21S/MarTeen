<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>MarTeen App</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css"  rel="stylesheet"/>
    <style>
      body {
        margin: 0;
        font-family: Arial, sans-serif;
      }

      .container-fluid {
        display: flex;
      }

      .sidebar {
        width: 250px;
        background-color: #fff;
        height: 100vh;
        padding: 20px;
        border-right: 1px solid #e0e0e0;
      }

      .sidebar h2 {
        font-weight: bold;
      }

      .sidebar ul {
        list-style-type: none;
        padding: 0;
        margin-top: 30px;
      }

      .sidebar ul li {
        padding: 10px;
        margin: 10px 0;
        display: flex;
        align-items: center;
        transition: background-color 0.3s;
        border-radius: 20px;
      }

      .sidebar ul li:hover {
        background-color: orange;
        border-radius: 20px;
      }

      .sidebar ul li.active {
          background-color: orange;
          border-radius: 20px;
      }

      .sidebar ul li a {
        text-decoration: none;
        color: gray;
        display: flex;
        align-items: center;
        width: 100%;
      }

      .sidebar ul li img {
        margin-right: 10px;
      }

      .main-content {
        flex-grow: 1;
        padding: 20px;
        background-color: #f8f9fa;
        display: flex;
        flex-direction: column;
      }

      .table-container {
        background-color: #fff;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        margin-top: 20px;
        display: flex;
        justify-content: space-between;
      }

      .table {
        flex: 2;
        margin-right: 20px;
        border-spacing: 15px; /* Memberikan jarak antar kolom */
      }

      .table th,
      .table td {
        vertical-align: middle;
        padding: 10px; /* Memberikan jarak antara konten dan border sel */
        text-align: left; /* Membuat teks rata kiri */
        border-spacing: 15px; /* Memberikan jarak antar kolom */
      }

      .payment-section {
        flex: 1;
        display: flex;
        flex-direction: column;
      }

      .payment-table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 10px;
      }

      .payment-table td {
        padding: 10px;
        vertical-align: middle;
        border-bottom: 1px solid #ddd;
      }

      .payment-table td:first-child {
        width: 30%;
      }

      .payment-table tr:first-child td {
        padding-top: 0;
        font-size: 18px;
        font-weight: bold;
      }

      .payment-table tr:nth-child(3) td:last-child {
        padding-top: 10px;
        padding-bottom: 10px;
      }

      .subtotal-total {
        text-align: right;
        margin-top: 10px;
      }

      .subtotal-total p {
        margin: 0;
      }

      .button-section {
        display: flex;
        justify-content: space-between;
        margin-top: 20px;
      }

      .cancel-order,
      .pay-now {
        width: 48%; /* Membuat kedua tombol memiliki lebar hampir sama */
        padding: 10px 0;
        border-radius: 5px;
      }

      .cancel-order {
        background-color: #ffcccc;
        color: red;
        border: none;
      }

      .pay-now {
        background-color: #87ceeb;
        color: white;
        border: none;
      }

      .payment-button:hover{
        background-color: #87ceeb;
      }

      .payment-button.active {
        background-color: orange; /* Warna ketika dipilih */
        color: white;
      }

      .notification {
        position: fixed;
        top: 20px;
        right: 20px;
        background-color: orange;
        color: white;
        padding: 10px 20px;
        border-radius: 5px;
        display: none; /* Notifikasi disembunyikan secara default */
        z-index: 1000;
      }

      .notification.show {
        display: block;
      }

      .notification.error {
        background-color: #f44336; /* Warna merah untuk error */
      }

    </style>
  </head>

  <body>
    <div class="container-fluid">
      <!-- Sidebar -->
      <div class="sidebar">
        <h2>
          <a href="/" style="text-decoration: none; color: inherit">MarTeen</a>
        </h2>
        <ul>
          <li>
            <a href="#">
              <img
                src="aset_index/Bill.png"
                alt="Bill Logo"
                style="width: 40px; height: auto; margin-right: 10px"
              />
              Diskon
            </a>
          </li>
          <li class="<%= (currentUrl === '/best-seller') ? 'active' : '' %>">
            <a href="/best-seller">
              <img
                src="aset_index/Review.png"
                alt="Best Seller"
                style="width: 40px; height: auto; margin-right: 10px"
              />
              Best Seller Kantin
            </a>
          </li>
          <li class="<%= (currentUrl === '/menu') ? 'active' : '' %>">
            <a href="/menu">
              <img
                src="aset_index/Bill.png"
                alt="Menu"
                style="width: 40px; height: auto; margin-right: 10px"
              />
              Menu
            </a>
          </li>
          <li class="<%= (currentUrl === '/pesanan') ? 'active' : '' %>">
            <a href="/pesanan">
              <img
                src="aset_index/Delivery Scooter.png"
                alt="Pesanan Makanan"
                style="width: 40px; height: auto; margin-right: 10px"
              />
              Pesanan Makanan
            </a>
          </li>
          <li
            class="<%= (currentUrl === '/profil-pengaturan') ? 'active' : '' %>"
          >
            <a href="/profil-pengaturan">
              <img
                src="aset_index/Process.png"
                alt="Profil & Pengaturan"
                style="width: 30px; margin-right: 10px"
              />
              Profil & Pengaturan
            </a>
          </li>
        </ul>
      </div>

      <!-- Main Content -->
      <div class="main-content">
        <h1>Hello, Pengguna</h1>

        <div id="notification" class="notification">
          <p id="notification-message"></p>
        </div>

        <div class="table-container">
          <table>
            <thead>
              <tr>
                <th style="padding-left: 40px; padding-right: 40px">
                  Nama Menu
                </th>
                <th style="padding-left: 40px; padding-right: 40px">
                  Nama Kantin
                </th>
                <th style="padding-left: 40px; padding-right: 40px">Harga</th>
                <th style="padding-left: 40px; padding-right: 40px">Jumlah</th>
              </tr>
            </thead>
            <tbody>
              <% if (pesanan.length > 0) { %> <% pesanan.forEach((item) => { %>
              <tr id="order_<%= item.id %>">
                <td><%= item.nama_menu %></td>
                <td><%= item.nama_kantin %></td>
                <td>Rp <%= item.harga.toLocaleString('id-ID', { style: "currency",
                  currency: "IDR" }) %></td>
                <td><%= item.quantity || 1 %></td>
              </tr>
              <% }) %> <% } else { %>
              <tr>
                <td colspan="4" style="text-align: center" class="no-orders-message">
                  Belum ada pesanan
                </td>
              </tr>
              <% } %>
            </tbody>
          </table>

          <form action="/pesanan" method="post" id="paymentForm" novalidate>
            <input type="hidden" id="userId" value="<%= userId %>">
            <input type="hidden" name="totalHarga" value="<%= totalHarga %>">
            <input type="hidden" name="metodePembayaran" id="metodePembayaran" value="">
          
            <div class="payment-section">
              <table class="payment-table">
                <tr>
                  <td colspan="2">Bayar Dulu</td>
                </tr>
                <tr>
                  <td colspan="2">
                    <button type="button" class="payment-button" id="cash" data-payment="CASH">CASH</button>
                    <button type="button" class="payment-button" id="card" data-payment="CARD">CARD</button>
                    <button type="button" class="payment-button" id="voucher" data-payment="VOUCHER">VOUCHER</button>
                  </td>
                </tr>
              </table>
            </div>

            <div class="subtotal-total">
              <p>
                <%= totalHarga.toLocaleString("id-ID", { style: "currency",
                currency: "IDR" }) %>
              </p>
            </div>
          
            <div class="button-section">
              <button type="button" class="cancel-order">Cancel Order</button>
              <button type="submit" class="pay-now">Pay Now</button>
            </div>
          </form>
          
  <script>
    // Variabel untuk menyimpan metode pembayaran yang dipilih
    let selectedPaymentMethod = "";

    function showNotification(message, isError = false) {
      const notification = document.getElementById("notification");
      const notificationMessage = document.getElementById("notification-message");

      // Set pesan notifikasi
      notificationMessage.textContent = message;

      // Tambahkan kelas error jika ada kesalahan
      if (isError) {
        notification.classList.add("error");
      } else {
        notification.classList.remove("error");
      }
    
      // Tampilkan notifikasi
      notification.classList.add("show");
    
      // Sembunyikan notifikasi setelah beberapa detik
      setTimeout(() => {
        notification.classList.remove("show");
      }, 3000); // Notifikasi akan hilang setelah 3 detik
    }

    document.querySelectorAll('.payment-button').forEach(button => {
      button.addEventListener('click', function () {
        // Hapus kelas 'active' dari semua tombol
        document.querySelectorAll('.payment-button').forEach(btn => btn.classList.remove('active'));

        // Tambahkan kelas 'active' ke tombol yang ditekan
        this.classList.add('active');
        });
      });
  
    // Menangani klik tombol metode pembayaran
    document.querySelectorAll(".payment-button").forEach((button) => {
      button.addEventListener("click", (event) => {
        // Simpan metode pembayaran yang dipilih
        selectedPaymentMethod = event.target.dataset.payment;
  
        // Masukkan metode pembayaran ke input hidden
        document.getElementById("metodePembayaran").value = selectedPaymentMethod;
  
        // Highlight tombol yang dipilih
        document.querySelectorAll(".payment-button").forEach((btn) => {
          btn.classList.remove("selected"); // Hapus highlight sebelumnya
        });
        event.target.classList.add("selected"); // Tambahkan highlight pada tombol yang dipilih
      });
    });
  
    // Menangani klik tombol Pay Now
    document.querySelector(".pay-now").addEventListener("click", async (event) => {
      event.preventDefault(); // Hindari pengiriman form default
  
      // Validasi: Pastikan metode pembayaran sudah dipilih
      if (!selectedPaymentMethod) {
        showNotification("Silakan pilih metode pembayaran sebelum melanjutkan.", true);
        return;
      }
  
      // Ambil data untuk dikirim
      const data = {
        IdUser: document.getElementById("userId").value,
        totalHarga: document.querySelector("[name='totalHarga']").value,
        metodePembayaran: selectedPaymentMethod,
      };
  
      // Tombol Pay Now di-disable sementara untuk mencegah pengiriman ganda
      const payNowButton = document.querySelector(".pay-now");
      payNowButton.disabled = true;
      payNowButton.textContent = "Memproses...";
  
      try {
        // Kirim data ke endpoint menggunakan fetch
        const response = await fetch("/pesanan", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(data),
        });
  
        const result = await response.json();
  
        if (response.ok) {
          showNotification(`Pesanan berhasil! ID Transaksi: ${result.transaksiId}`);

          // Menyembunyikan menu yang telah dipesan setelah pembayaran berhasil
          const orderTable = document.querySelector("table tbody");
          orderTable.innerHTML = '<tr><td colspan="4" style="text-align: center">Pesanan telah dibayar.</td></tr>';
          document.querySelector("[name='totalHarga']").value = 0;
          
          // Lakukan reset jika perlu
          document.getElementById("paymentForm").reset();
          selectedPaymentMethod = ""; // Reset metode pembayaran
          document.querySelectorAll(".payment-button").forEach((btn) => {
            btn.classList.remove("selected"); // Hapus highlight dari semua tombol
          });
        } else {
          showNotification(`Gagal: ${result.error}`, true);
        }
      } catch (error) {
        console.error("Error processing order:", error);
        showNotification("Terjadi kesalahan saat memproses pesanan.", true);
      } finally {
        // Aktifkan kembali tombol Pay Now
        payNowButton.disabled = false;
        payNowButton.textContent = "Pay Now";
      }
    });
  
    // Menangani klik tombol Cancel Order
    document.querySelector(".cancel-order").addEventListener("click", async () => {
      if (!confirm("Apakah Anda yakin ingin membatalkan semua pesanan?")) return;
  
      const userId = document.getElementById("userId").value;
  
      try {
        const response = await fetch("/pesanan", {
          method: "DELETE",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ IdUser: userId }),
        });
  
        const result = await response.json();
  
        if (response.ok) {
          alert(result.message);
          // Reset tampilan tabel pesanan
          document.querySelector("table tbody").innerHTML =
            '<tr><td colspan="4" style="text-align: center">Belum ada pesanan</td></tr>';
          document.querySelector("[name='totalHarga']").value = 0;
        } else {
          alert(`Gagal: ${result.error}`);
        }
      } catch (error) {
        console.error("Error canceling order:", error);
        alert("Terjadi kesalahan saat membatalkan pesanan.");
      }
    });
  </script>          
</html>
